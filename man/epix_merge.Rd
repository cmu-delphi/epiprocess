% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-epi_archive.R
\name{epix_merge}
\alias{epix_merge}
\title{Merge two \code{epi_archive} objects}
\usage{
epix_merge(x, y, ..., locf = TRUE, nan = NA)
}
\arguments{
\item{x, y}{Two \code{epi_archive} objects to join together, or more specifically,
whose underlying data tables are to be joined together. The data table in
\code{x} will be overwritten with the joined data table. For convenience, we
also allow \code{y} to be passed in directly as a \code{data.table} (need not be an
\code{epi_archive} object).}

\item{...}{Named arguments to pass to \code{data.table::merge.data.table()}, which
is used for the join (with all default settings as in this function). For
example, passing \code{all = TRUE} will perform a full join.}

\item{locf}{Should LOCF be used after joining on all non-key columns? This
will take the latest version of each signal value and propogate it forward
to fill in gaps that appear after merging. Default is \code{TRUE}.}

\item{nan}{Should \code{NaN} values be treated as \code{NA} values in the post-filling
step?  Default is \code{NA}, which means that they are treated as \code{NA} values; if}
}
\value{
Nothing; the data table in \code{x} is overwritten with the merged one.
}
\description{
Merges the underlying data tables in two \code{epi_archive} objects, allows for
post-filling of \code{NA} values by last observation carried forward (LOCF), and
\strong{overwrites} the first data table with the merged one. See the \href{https://cmu-delphi.github.io/epiprocess/articles/archive.html}{archive vignette} for
examples.
}
\details{
This is simply a wrapper around the \code{merge()} method of the
\code{epi_archive} class, so if \code{x} and \code{y} are an \code{epi_archive} objects, then:

\if{html}{\out{<div class="sourceCode">}}\preformatted{epix_merge(x, y)
}\if{html}{\out{</div>}}

is equivalent to:

\if{html}{\out{<div class="sourceCode">}}\preformatted{x$merge(y)
}\if{html}{\out{</div>}}
}
\examples{
# create two example epi_archive datasets
x <- archive_cases_dv_subset$DT \%>\%
  dplyr::select(geo_value,time_value,version,case_rate_7d_av) \%>\%
  as_epi_archive()
y <- archive_cases_dv_subset$DT \%>\%
  dplyr::select(geo_value,time_value,version,percent_cli) \%>\%
  as_epi_archive()

# a full join stored in x
epix_merge(x, y, all = TRUE)
}
