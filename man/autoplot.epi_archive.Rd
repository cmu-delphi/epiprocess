% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot.R
\name{autoplot.epi_archive}
\alias{autoplot.epi_archive}
\title{Automatically plot an epi_archive}
\usage{
\method{autoplot}{epi_archive}(
  object,
  ...,
  .base_color = "black",
  .versions = NULL,
  .mark_versions = FALSE,
  .facet_filter = NULL
)
}
\arguments{
\item{object}{An \code{epi_archive}}

\item{...}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> One or more unquoted
expressions separated by commas. Variable names can be used as if they
were positions in the data frame, so expressions like \code{x:y} can
be used to select a range of variables.}

\item{.base_color}{Lines will be shown with this color if \code{.color_by == "none"}.
For example, with a single numeric variable and faceting by \code{geo_value}, all
locations would share the same color line.}

\item{.versions}{Select which versions will be displayed. By default, every
a separate line will be shown with the data as it would have appeared on
every day in the archive. This can sometimes become overwhelming. For
example, daily data would display a line for what the data would have looked
like on every single day. To override this, you can select specific dates,
by passing a vector of values here. Alternatively, a sequence can be
automatically created by passing a string like \code{"2 weeks"} or \code{"month"}.
For time types where the \code{time_value} is a date object, any string that
is interpretable by \verb{[base::seq.Date()]} is allowed.

For \code{time_type = "integer"}, an integer larger than 1 will give a subset
of versions.}

\item{.mark_versions}{Logical. Indicate whether to mark each version with
a vertical line. Note that displaying many versions can become busy.}

\item{.facet_filter}{Select which facets will be displayed. Especially
useful for when there are many \code{geo_value}'s or keys. This is a
<\code{\link[=args_data_masking]{rlang}}> expression along the lines of \verb{[dplyr::filter()]}.
However, it must be a single expression combined with the \code{&} operator. This
contrasts to the typical use case which allows multiple comma-separated expressions
which are implicitly combined with \code{&}. When multiple variables are selected
with \code{...}, their names can be filtered in combination with other factors
by using \code{.response_name}. See the examples below.}
}
\value{
A \link[ggplot2:ggplot]{ggplot2::ggplot} object
}
\description{
Automatically plot an epi_archive
}
\examples{
autoplot(archive_cases_dv_subset, percent_cli, .versions = "week")
autoplot(archive_cases_dv_subset_all_states, percent_cli,
  .versions = "week",
  .facet_filter = geo_value \%in\% c("or", "az", "vt", "ms")
)
autoplot(archive_cases_dv_subset, percent_cli,
  .versions = "month",
  .facet_filter = geo_value == "ca"
)
autoplot(archive_cases_dv_subset_all_states, percent_cli,
  .versions = "1 month",
  .facet_filter = geo_value \%in\% c("or", "az", "vt", "ms"),
  .mark_versions = TRUE
)
}
