% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archive.R
\name{epi_archive}
\alias{epi_archive}
\title{\code{epi_archive} object}
\description{
An \code{epi_archive} is an R6 class which contains a data table
along with several relevant pieces of metadata. The data table can be seen
as the full archive (version history) for some signal variables of
interest.
}
\details{
An \code{epi_archive} is an R6 class which contains a data table \code{DT}, of
class \code{data.table} from the \code{data.table} package, with (at least) the
following columns:
\itemize{
\item \code{geo_value}: the geographic value associated with each row of measurements.
\item \code{time_value}: the time value associated with each row of measurements.
\item \code{version}: the time value specifying the version for each row of
measurements. For example, if in a given row the \code{version} is January 15,
2022 and \code{time_value} is January 14, 2022, then this row contains the
measurements of the data for January 14, 2022 that were available one day
later.
}

The data table \code{DT} has key variables \code{geo_value}, \code{time_value}, \code{version},
as well as any others (these can be specified when instantiating the
\code{epi_archive} object via the \code{other_keys} argument, and/or set by operating
on \code{DT} directly). Refer to the documentation for \code{\link[=as_epi_archive]{as_epi_archive()}} for
information and examples of relevant parameter names for an \code{epi_archive} object.
Note that there can only be a single row per unique combination of
key variables, and thus the key variables are critical for figuring out how
to generate a snapshot of data from the archive, as of a given version.

In general, last observation carried forward (LOCF) is used to data in
between recorded versions. Currently, deletions must be represented as
revising a row to a special state (e.g., making the entries \code{NA} or
including a special column that flags the data as removed and performing
some kind of post-processing), and the archive is unaware of what this
state is.

\strong{A word of caution:} R6 objects, unlike most other objects in R, have
reference semantics. A primary consequence of this is that objects are not
copied when modified. You can read more about this in Hadley Wickham's
\href{https://adv-r.hadley.nz/r6.html#r6-semantics}{Advanced R} book.
}
\section{Metadata}{

The following pieces of metadata are included as fields in an \code{epi_archive}
object:
\itemize{
\item \code{geo_type}: the type for the geo values.
\item \code{time_type}: the type for the time values.
\item \code{additional_metadata}: list of additional metadata for the data archive.
}

Unlike an \code{epi_df} object, metadata for an \code{epi_archive} object \code{x} can be
accessed (and altered) directly, as in \code{x$geo_type} or \code{x$time_type},
etc. Like an \code{epi_df} object, the \code{geo_type} and \code{time_type} fields in the
metadata of an \code{epi_archive} object are not currently used by any
downstream functions in the \code{epiprocess} package, and serve only as useful
bits of information to convey about the data set at hand.
}

\section{Generating Snapshots}{

An \code{epi_archive} object can be used to generate a snapshot of the data in
\code{epi_df} format, which represents the most up-to-date values of the signal
variables, as of the specified version. This is accomplished by calling the
\code{as_of()} method for an \code{epi_archive} object \code{x}. More details on this
method are documented in the wrapper function \code{epix_as_of()}.
}

\section{Sliding Computations}{

We can run a sliding computation over an \code{epi_archive} object, much like
\code{epi_slide()} does for an \code{epi_df} object. This is accomplished by calling
the \code{slide()} method for an \code{epi_archive} object, which works similarly to
the way \code{epi_slide()} works for an \code{epi_df} object, but with one key
difference: it is version-aware. That is, for an \code{epi_archive} object, the
sliding computation at any given reference time point t is performed on
\strong{data that would have been available as of t}. More details on \code{slide()}
are documented in the wrapper function \code{epix_slide()}.
}

\examples{
tib <- tibble::tibble(
  geo_value = rep(c("ca", "hi"), each = 5),
  time_value = rep(seq(as.Date("2020-01-01"), 
                       by = 1, length.out = 5), times = 2),
  version = rep(seq(as.Date("2020-01-02"), 
                    by = 1, length.out = 5), times = 2),
  value = rnorm(10, mean = 2, sd = 1)
)

toy_epi_archive <- tib \%>\% epi_archive$new(geo_type = "state", 
                                           time_type = "day")
toy_epi_archive 
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-epi_archive-new}{\code{epi_archive$new()}}
\item \href{#method-epi_archive-print}{\code{epi_archive$print()}}
\item \href{#method-epi_archive-as_of}{\code{epi_archive$as_of()}}
\item \href{#method-epi_archive-merge}{\code{epi_archive$merge()}}
\item \href{#method-epi_archive-slide}{\code{epi_archive$slide()}}
\item \href{#method-epi_archive-clone}{\code{epi_archive$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-new"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-new}{}}}
\subsection{Method \code{new()}}{
Creates a new \code{epi_archive} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$new(x, geo_type, time_type, other_keys, additional_metadata)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{A data frame, data table, or tibble, with columns \code{geo_value},
\code{time_value}, \code{version}, and then any additional number of columns.}

\item{\code{geo_type}}{Type for the geo values. If missing, then the function will
attempt to infer it from the geo values present; if this fails, then it
will be set to "custom".}

\item{\code{time_type}}{Type for the time values. If missing, then the function will
attempt to infer it from the time values present; if this fails, then it
will be set to "custom".}

\item{\code{other_keys}}{Character vector specifying the names of variables in \code{x}
that should be considered key variables (in the language of \code{data.table})
apart from "geo_value", "time_value", and "version".}

\item{\code{additional_metadata}}{List of additional metadata to attach to the
\code{epi_archive} object. The metadata will have \code{geo_type} and \code{time_type}
fields; named entries from the passed list or will be included as well.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Refer to the documentation for \code{\link[=as_epi_archive]{as_epi_archive()}} for more information
and examples of parameter names.
}

\subsection{Returns}{
An \code{epi_archive} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-print"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-as_of"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-as_of}{}}}
\subsection{Method \code{as_of()}}{
Generates a snapshot in \code{epi_df} format as of a given version.
See the documentation for the wrapper function \code{epix_as_of()} for details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$as_of(max_version, min_time_value = -Inf)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-merge"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-merge}{}}}
\subsection{Method \code{merge()}}{
Merges another \code{data.table} with the current one, and allows for
a post-filling of \code{NA} values by last observation carried forward (LOCF).
See the documentation for the wrapper function \code{epix_merge()} for details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$merge(y, ..., locf = TRUE, nan = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-slide"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-slide}{}}}
\subsection{Method \code{slide()}}{
Slides a given function over variables in an \code{epi_archive}
object. See the documentation for the wrapper function \code{epix_as_of()} for
details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$slide(
  f,
  ...,
  n = 7,
  group_by,
  ref_time_values,
  time_step,
  new_col_name = "slide_value",
  as_list_col = FALSE,
  names_sep = "_",
  all_rows = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-epi_archive-clone"></a>}}
\if{latex}{\out{\hypertarget{method-epi_archive-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{epi_archive$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
