% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-epi_df.R
\name{reconstruct_light_edf}
\alias{reconstruct_light_edf}
\title{Like \code{dplyr_reconstruct.epi_df} but not recomputing any grouping}
\usage{
reconstruct_light_edf(data, template)
}
\description{
In the move to our current not-quite-proper/effective "implementation" of
\code{\link[dplyr:dplyr_extending]{dplyr::dplyr_extending}} for \code{epi_df}s, we moved a lot of checks in
\code{dplyr_reconstruct} and used it instead of \code{\link[=reclass]{reclass()}} in various
operations to prevent operations from outputting invalid metadata/classes,
instead of more careful tailored and relevant checks. However, this actually
introduced extra overhead due to \code{dplyr_reconstruct.epi_df()} passing off to
\code{dplyr_reconstruct.grouped_df()} when grouped, which assumes that it will
need to / should for safety recompute the groups, even when it'd be safe for
it not to do so. In many operations, we're using \code{NextMethod()} to dispatch
to \code{grouped_df} behavior if needed, and it should output something with valid
groupings.
}
\details{
This function serves the original purpose of performing \code{epi_df}-centric
checks rather than just throwing on potentially-incorrect metadata like
\code{reclass()}, but without unnecessary \code{dplyr_reconstruct()} delegation.
}
\keyword{internal}
