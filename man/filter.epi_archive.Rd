% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-epi_archive.R
\name{filter.epi_archive}
\alias{filter.epi_archive}
\title{\code{\link[dplyr:filter]{dplyr::filter}} for \code{epi_archive}s}
\usage{
\method{filter}{epi_archive}(.data, ..., .by = NULL, .format_aware = FALSE)
}
\arguments{
\item{.data}{an \code{epi_archive}}

\item{...}{as in \code{\link[dplyr:filter]{dplyr::filter}}; using the \code{version} column is not allowed
unless you use \code{.format_aware = TRUE}; see details.}

\item{.by}{as in \code{\link[dplyr:filter]{dplyr::filter}}}

\item{.format_aware}{optional, \code{TRUE} or \code{FALSE}; default \code{FALSE}. See
details.}
}
\description{
\code{\link[dplyr:filter]{dplyr::filter}} for \code{epi_archive}s
}
\details{
By default, using the \code{version} column is disabled as it's easy to
get unexpected results. See if either \code{\link{epix_as_of}} or \code{\link{epix_slide}}
works as an alternative. If they don't cover your use case, then you can
set \code{.format_aware = TRUE} to enable usage of the \code{version} column, but be
careful to:
\itemize{
\item Factor in that \code{.data$DT} may be using a "compact" format based on diffing
consecutive versions; see details of \code{\link{as_epi_archive}}
\item Set \code{clobberable_versions_start} and \code{versions_end} of the result
appropriately after the \code{filter} call. They will be initialized with the
same values as in \code{.data}.
}

\code{dplyr::filter} also has an optional argument \code{.preserve}, which should not
have an impact on (ungrouped) \code{epi_archive}s, and \code{grouped_epi_archive}s do
not currently support \code{dplyr::filter}.
}
\examples{

# Filter to one location and a particular time range:
archive_cases_dv_subset \%>\%
  filter(geo_value == "fl", time_value >= as.Date("2020-10-01"))

# Convert to weekly by taking the Saturday data for each week, so that
# `case_rate_7d_av` represents a Sun--Sat average:
archive_cases_dv_subset \%>\%
  filter(as.POSIXlt(time_value)$wday == 6L)

# Filtering involving versions requires extra care. See epix_as_of and
# epix_slide instead for some common operations. One semi-common operation
# that ends up being fairly simple is treating observations as finalized
# after some amount of time, and ignoring any revisions that were made after
# that point:
archive_cases_dv_subset \%>\%
  filter(version <= time_value + as.difftime(60, units = "days"),
         .format_aware = TRUE)

}
